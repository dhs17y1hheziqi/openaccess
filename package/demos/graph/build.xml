<!--

This demo shows how to use fetch groups to retrieve a graph of instances
in as few queries as possible. The same graph is retrieved using different
strategies. For each strategy the time required and the number of SELECT's
executed is displayed.

Note that very large graphs may report incorrect select counts as the
event log ring buffer may overflow losing selects.

Run 'ant insert-data run' to run the demo.

-->

<project name="graph" default="compile" basedir=".">

    <property name="src" value="src"/>
    <property name="build" value="build"/>
    <property name="build.classes" value="${build}/classes"/>
    <property name="jdo.project" value="versant.properties"/>
    <property name="jdo.home" value="../.."/>
    <property name="jdo.license" value="${jdo.home}/license"/>
    <property name="jdo.lib" value="${jdo.home}/lib"/>
    <property name="jdo.tools" value="${jdo.home}/tools"/>

    <path id="cp">
        <pathelement path="${src}"/>
        <pathelement path="${build.classes}"/>
        <pathelement path="${jdo.license}"/>
        <fileset dir="${jdo.lib}" includes="**/*.jar"/>
    </path>

    <target name="clean"
        description="Get rid of all generated files">
        <delete dir="${build}"/>
        <mkdir dir="${build.classes}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.classes}"/>
        <copy file="${jdo.project}" todir="${build.classes}"/>
        <!-- Define JDO Genie tasks (jdo-xxx) -->
        <taskdef resource="versant.tasks">
            <classpath>
                <path refid="cp"/>
                <fileset dir="${jdo.tools}" includes="**/*.jar"/>
            </classpath>
        </taskdef>
    </target>

    <target name="compile" depends="init"
        description="Compile and enhance all Java sources">
        <dependset>
            <!-- Delete the classes if the JDO meta data has been changed.
                 They need to be recompiled and enhanced. -->
            <srcfileset dir="${src}" includes="**/*.jdo"/>
            <targetfileset dir="${build.classes}" includes="**/*.class"/>
        </dependset>
        <javac srcdir="${src}" destdir="${build.classes}" classpathref="cp" debug="true"/>
        <jdo-enhance outputdir="${build.classes}">
            <persistentaware dir="${build.classes}"/>
        </jdo-enhance>
    </target>

    <target name="create-db" depends="compile"
        description="Re-create database schema">
        <jdo-create-db
            outputdir="${build}"
            droptables="*"
            createtables="*"/>
    </target>

    <target name="insert-data" depends="create-db"
        description="Insert test data">
        <java classname="graph.InsertData" classpathref="cp" fork="true"
            maxmemory="128m">
            <arg value="10"/>
            <arg value="3"/>
        </java>
    </target>

    <target name="run" depends="compile"
        description="Run the graph walking tests">
        <java classname="graph.Walk" classpathref="cp" fork="true"
            maxmemory="128m"/>
    </target>

</project>
