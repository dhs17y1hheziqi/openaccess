
/*
 * Copyright (c) 1998 - 2005 Versant Corporation
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * Versant Corporation - initial API and implementation
 */
/* Generated By:JavaCC: Do not edit this line. JDOQLParserConstants.java */
package com.versant.core.jdo.query;

public interface JDOQLParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 6;
  int FORMAL_COMMENT = 7;
  int MULTI_LINE_COMMENT = 8;
  int ABSTRACT = 9;
  int ASCENDING = 10;
  int DISTINCT = 11;
  int GROUP = 12;
  int HAVING = 13;
  int MAX = 14;
  int MIN = 15;
  int AVG = 16;
  int COUNT_STAR = 17;
  int COUNT = 18;
  int SUM = 19;
  int AS = 20;
  int BOOLEAN = 21;
  int BYTE = 22;
  int CHAR = 23;
  int DESCENDING = 24;
  int DOUBLE = 25;
  int FLOAT = 26;
  int IMPORT = 27;
  int INT = 28;
  int LONG = 29;
  int SHORT = 30;
  int THIS = 31;
  int INTEGER_LITERAL = 32;
  int DECIMAL_LITERAL = 33;
  int HEX_LITERAL = 34;
  int OCTAL_LITERAL = 35;
  int FLOATING_POINT_LITERAL = 36;
  int EXPONENT = 37;
  int CHARACTER_LITERAL = 38;
  int NULL = 39;
  int BOOLEAN_LITERAL = 40;
  int STRING_LITERAL = 41;
  int IDENTIFIER = 42;
  int LETTER = 43;
  int DIGIT = 44;
  int LPAREN = 45;
  int RPAREN = 46;
  int LBRACE = 47;
  int RBRACE = 48;
  int LBRACKET = 49;
  int RBRACKET = 50;
  int SEMICOLON = 51;
  int COMMA = 52;
  int DOT = 53;
  int GT = 54;
  int LT = 55;
  int BANG = 56;
  int TILDE = 57;
  int EQ = 58;
  int LE = 59;
  int GE = 60;
  int NE = 61;
  int SC_OR = 62;
  int SC_AND = 63;
  int PLUS = 64;
  int MINUS = 65;
  int STAR = 66;
  int SLASH = 67;
  int BIT_AND = 68;
  int BIT_OR = 69;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"abstract\"",
    "\"ascending\"",
    "\"distinct\"",
    "\"group\"",
    "\"having\"",
    "\"max\"",
    "\"min\"",
    "\"avg\"",
    "\"count(*)\"",
    "\"count\"",
    "\"sum\"",
    "\"as\"",
    "\"boolean\"",
    "\"byte\"",
    "\"char\"",
    "\"descending\"",
    "\"double\"",
    "\"float\"",
    "\"import\"",
    "\"int\"",
    "\"long\"",
    "\"short\"",
    "\"this\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "\"null\"",
    "<BOOLEAN_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
  };

}
